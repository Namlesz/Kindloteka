@page "/"
@using Microsoft.AspNetCore.WebUtilities
@using Kindloteka.Data
@using Kindloteka.Models
@inject NavigationManager NavManager

<PageTitle>Kindloteka</PageTitle>

<h1>Lista książek</h1>

<p>Wybierz książke z listy, a następnie naciśnij przycisk aby zarezerwować książkę.</p>

<div class="form-group">
    <input class="form-control" type="text" placeholder="Szukaj..."
           @bind="Filter"
           @bind:event="oninput">
</div>
<table class="table table-hover mt-3">
    <thead>
    <tr>
        <th>Tytuł</th>
        <th>Autor</th>
        <th>Akcja</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var book in _books)
    {
        if (IsVisible(book))
        {
            <tr>
                <td>@book.Title</td>
                <td>@book.Author</td>
                <td>
                    <button type="button" class="btn btn-outline-primary" @onclick="() => ReserveBook(book)">ZAREZERWUJ</button>
                </td>
            </tr>
        }
    }
    </tbody>
</table>


@code {
    private List<Book>? _books;
    private string? Filter { get; set; }

    protected override Task OnInitializedAsync()
    {
        _books = BookList.Books;
        return Task.CompletedTask;
    }

    private bool IsVisible(Book book)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;

        if (book.Author.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;

        if (book.Title.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }

    private void ReserveBook(Book book)
    {
        var queryParams = new Dictionary<string, string>
        {
            { "title", book.Title },
            { "author", book.Author }
        };
        NavManager.NavigateTo(QueryHelpers.AddQueryString("/rezerwacja", queryParams!));
    }

}